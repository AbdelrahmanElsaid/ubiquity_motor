{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"in",
				"include"
			],
			[
				"thea",
				"thread_loop_delay"
			],
			[
				"con",
				"controller_loop_rate"
			],
			[
				"set",
				"setType"
			],
			[
				"Mo",
				"MotorHardware"
			],
			[
				"cont",
				"controlLoop"
			],
			[
				"ST",
				"START"
			],
			[
				"Serial",
				"serial"
			],
			[
				"ou",
				"out"
			],
			[
				"inp",
				"inputAvailable"
			],
			[
				"get",
				"getData"
			],
			[
				"ve",
				"velocity_command"
			],
			[
				"mo",
				"motor_serial_"
			],
			[
				"M",
				"MotorHardware"
			],
			[
				"if",
				"ifndef"
			],
			[
				"out",
				"output"
			],
			[
				"th",
				"throw"
			],
			[
				"c",
				"catch"
			],
			[
				"comm",
				"commandAvailable"
			],
			[
				"ver",
				"verifyType"
			],
			[
				"s",
				"serialize"
			],
			[
				"verify",
				"verifyRegister"
			],
			[
				"va",
				"valid_registers"
			],
			[
				"u",
				"uint8_t"
			],
			[
				"vali",
				"valid_types"
			],
			[
				"reg",
				"register_addr"
			],
			[
				"pro",
				"protocol_version"
			],
			[
				"se",
				"setRegister"
			],
			[
				"re",
				"return"
			],
			[
				"ger",
				"generateChecksum"
			],
			[
				"int",
				"int32_t"
			],
			[
				"typ",
				"Type"
			],
			[
				"MOR",
				"MotorCommand"
			],
			[
				"a",
				"addr"
			],
			[
				"ch",
				"checksum"
			],
			[
				"sel",
				"select_adc"
			],
			[
				"p",
				"println"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "cmake_minimum_required(VERSION 2.8.3)\nproject(ubiquity_motor)\n\n## Find catkin macros and libraries\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n## is used, also find other catkin packages\nfind_package(catkin REQUIRED COMPONENTS \n	roscpp \n	geometry_msgs \n	tf \n	nav_msgs \n	serial \n	hardware_interface \n	controller_manager)\n## System dependencies are found with CMake's conventions\nfind_package(Boost REQUIRED COMPONENTS \n	system \n	thread)\n\n\n## Uncomment this if the package has a setup.py. This macro ensures\n## modules and global scripts declared therein get installed\n## See http://ros.org/doc/groovy/api/catkin/html/user_guide/setup_dot_py.html\n# catkin_python_setup()\n\n#######################################\n## Declare ROS messages and services ##\n#######################################\n\n## Generate messages in the 'msg' folder\n# add_message_files(\n#   FILES\n#   Message1.msg\n#   Message2.msg\n# )\n\n## Generate services in the 'srv' folder\n# add_service_files(\n#   FILES\n#   Service1.srv\n#   Service2.srv\n# )\n\n## Generate added messages and services with any dependencies listed here\n# generate_messages(\n#   DEPENDENCIES\n#   std_msgs  # Or other packages containing msgs\n# )\n\n###################################\n## catkin specific configuration ##\n###################################\n## The catkin_package macro generates cmake config files for your package\n## Declare things to be passed to dependent projects\n## LIBRARIES: libraries you create in this project that dependent projects also need\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n## DEPENDS: system dependencies of this project that dependent projects also need\ncatkin_package(\n  INCLUDE_DIRS include\n  LIBRARIES ubiquity_motor\n#  CATKIN_DEPENDS other_catkin_pkg\n#  DEPENDS system_lib\n)\n\n###########\n## Build ##\n###########\n   	\n## Specify additional locations of header files\n## Your package locations should be listed before other locations\ninclude_directories(include ${catkin_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS})\n\n## Declare a cpp library\nadd_library(ubiquity_motor\n  src/motor_message.cc src/motor_serial.cc src/motor_hardware.cc\n)\ntarget_link_libraries(ubiquity_motor\n ${catkin_LIBRARIES}\n ${Boost_LIBRARIES}\n)\n\n## Declare a cpp executable\nadd_executable(motor_node src/motor_node.cc src/motor_message.cc src/motor_serial.cc src/motor_hardware.cc)\ntarget_link_libraries(motor_node\n ${catkin_LIBRARIES}\n ${Boost_LIBRARIES}\n)\n\n## Add cmake target dependencies of the executable/library\n## as an example, message headers may need to be generated before nodes\n#add_dependencies(controller)\n\n## Specify libraries to link a library or executable target against\n#target_link_libraries(motor_node\n # ${catkin_LIBRARIES}\n#)\n\n#############\n## Install ##\n#############\n\n# all install targets should use catkin DESTINATION variables\n# See http://ros.org/doc/groovy/api/catkin/html/adv_user_guide/variables.html\n\n## Mark executable scripts (Python etc.) for installation\n## in contrast to setup.py, you can choose the destination\n# install(PROGRAMS\n#   scripts/my_python_script\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n# )\n\n## Mark executables and/or libraries for installation\ninstall(TARGETS ubiquity_motor motor_node\n  ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n  LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n  RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n)\n\n## Mark cpp header files for installation\ninstall(DIRECTORY include/${PROJECT_NAME}/\n  DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n  FILES_MATCHING PATTERN \"*.h\"\n  PATTERN \".svn\" EXCLUDE\n)\n\n## Mark other files for installation (e.g. launch and bag files, etc.)\n# install(FILES\n#   # myfile1\n#   # myfile2\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n# )\n\n#############\n## Testing ##\n#############\n\n## Add gtest based cpp test target and link libraries\nif(CATKIN_ENABLE_TESTING)\n	catkin_add_gtest(ubiquity_motor_tests \n		test/motor_test.cc \n		test/motor_message_test.cc\n		test/motor_serial_test.cc)\n	target_link_libraries(ubiquity_motor_tests  ubiquity_motor ${catkin_LIBRARIES})\nendif()\n\n## Add folders to be run by python nosetests\n# catkin_add_nosetests(test)\n\n\n",
			"file": "CMakeLists.txt",
			"file_size": 4178,
			"file_write_time": 130933329062157930,
			"settings":
			{
				"buffer_size": 4182,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/ubiquity_motor/motor_serial.h",
			"settings":
			{
				"buffer_size": 2670,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/rohan/PCBs/Odin/RevB/QTC.xml",
			"settings":
			{
				"buffer_size": 64236,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/motor_serial.cc",
			"settings":
			{
				"buffer_size": 6795,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/motor_message.cc",
			"settings":
			{
				"buffer_size": 5734,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				":w",
				":w - Save"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"gi ad",
				"Git: Add Current File"
			],
			[
				"gitco",
				"Git: Commit"
			],
			[
				"git p",
				"Git: Pull"
			],
			[
				"git branc",
				"Git: Change Branch"
			],
			[
				"git st",
				"Git: Status"
			],
			[
				"git pu",
				"Git: Push"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git ad",
				"Git: Add Current File"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"git ",
				"Git: Status"
			],
			[
				"gi",
				"Git: Status"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"gti pull",
				"Git: Pull"
			],
			[
				"git s",
				"Git: Status"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"cmake",
				"Set Syntax: CMake"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"ins	",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/include",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/include/ubiquity_motor",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/src",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/test"
	],
	"file_history":
	[
		"/home/rohan/PCBs/Odin/RevB/QTC.xml",
		"/home/rohan/build/kicad/kicad-source-mirror/eeschema/plugins/bom2csv.xsl",
		"/home/rohan/build/kicad/kicad-source-mirror/eeschema/plugins/CMakeLists.txt",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/include/ubiquity_motor/motor_serial.h",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/include/ubiquity_motor/motor_hardware.h",
		"/home/rohan/PCBs/Odin/RevB/QTC.kicad_pcb",
		"/home/rohan/build/kicad/kicad.bzr/pcbnew/eagle_plugin.cpp",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/test/motor_message_test.cc",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/src/motor_message.cc",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/src/motor_hardware.cc",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/include/ubiquity_motor/motor_message.h",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/include/ubiquity_motor/motor_command_registers.h",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/CHANGELOG.rst",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/test/motor_serial_test.cc",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/src/motor_serial.cc",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/src/motor_node.cc",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/CMakeLists.txt",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/include/ubiquity_motor/motor_command.h",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/src/motor_command.cc",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/package.xml",
		"/home/rohan/indigo_catkin/src/ubiquity/magni-test.launch",
		"/home/rohan/indigo_catkin/src/ubiquity/basic_magni.urdf",
		"/home/rohan/indigo_catkin/src/ubiquity/magni.yaml",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/.travis.yml",
		"/home/rohan/.config/sublime-text-3/Packages/User/catkin.sublime-build",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/catkin.sublime-build",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/test/motor_command_test.cc",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/test/motor_test.cc",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/src/MotorCommand.cc",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/src/crc8.c",
		"/home/rohan/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/src/protocol.h",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/src/UbiquityMotor.cc",
		"/home/rohan/ubiquity/setup/app.js",
		"/home/rohan/ubiquity/setup/views/layout.jade",
		"/home/rohan/ubiquity/setup/package.json",
		"/home/rohan/Arduino/Spi_ADC_test/Spi_ADC_test.ino",
		"/home/rohan/Arduino/Easy_VR/Easy_VR.ino",
		"/home/rohan/Arduino/Spi_DAC_Test/Spi_DAC_Test.ino",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/include/ubiquity_motor/MotorDriver.h",
		"/home/rohan/indigo_catkin/src/ubiquity/ubiquity_motor/LICENSE",
		"/media/rohan/93b3892a-42e5-4de5-b76c-c3a9fd6d8999/home/rohan/justphone/JustPhoneFirmware/SPIPeripheralTest/SPIPeripheralTest.ino",
		"/home/rohan/Arduino/GSM_CALL/GSM_CALL.ino"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"model",
			"\n    ",
			"  ",
			"\\n",
			"Command",
			"MotorCommand",
			"CommandTypes",
			"motor_command",
			"command",
			"motor_command",
			"const",
			"};\n",
			"d",
			"serialized",
			"loopDelay",
			"new",
			"~",
			"n",
			"motors.",
			"wri",
			"WriteAll",
			"jade"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Message",
			"MotorMessage",
			"motor_message",
			"motors->"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4182,
						"regions":
						{
						},
						"selection":
						[
							[
								2148,
								2148
							]
						],
						"settings":
						{
							"syntax": "Packages/CMake/CMake.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1020.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "include/ubiquity_motor/motor_serial.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2670,
						"regions":
						{
						},
						"selection":
						[
							[
								1872,
								1872
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 570.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/rohan/PCBs/Odin/RevB/QTC.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 64236,
						"regions":
						{
						},
						"selection":
						[
							[
								4077,
								4077
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 663.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/motor_serial.cc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6795,
						"regions":
						{
						},
						"selection":
						[
							[
								6239,
								6239
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3053.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/motor_message.cc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5734,
						"regions":
						{
						},
						"selection":
						[
							[
								2522,
								2522
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1224.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.Button_Call":
	{
		"height": 112.0
	},
	"output.Easy_VR":
	{
		"height": 165.0
	},
	"output.GSM_CALL":
	{
		"height": 226.0
	},
	"output.GSM_TEST":
	{
		"height": 154.0
	},
	"output.Spi_ADC_test":
	{
		"height": 112.0
	},
	"output.Spi_DAC_Test":
	{
		"height": 112.0
	},
	"output.exec":
	{
		"height": 267.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 112.0
	},
	"output.stino_log":
	{
		"height": 112.0
	},
	"pinned_build_system": "Packages/User/catkin.sublime-build",
	"project": "ubiquity_motor.sublime-project",
	"replace":
	{
		"height": 94.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/ubiquity/website/website.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 250.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
